// BearerToken
let
  BearerToken = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsIng1dCI6Ik1yNS1BVWliZkJpaTdOZDFqQmViYXhib1hXMCIsImtpZCI6Ik1yNS1BVWliZkJpaTdOZDFqQmViYXhib1hXMCJ9.eyJhdWQiOiJodHRwczovL2FuYWx5c2lzLndpbmRvd3MubmV0L3Bvd2VyYmkvYXBpIiwiaXNzIjoiaHR0cHM6Ly9zdHMud2luZG93cy5uZXQvY2Y1MmU3ZTEtYTQ4Zi00MjFjLTg5OGEtMDIzYjA1ZWIwNDRjLyIsImlhdCI6MTY0NDk0NDcwNiwibmJmIjoxNjQ0OTQ0NzA2LCJleHAiOjE2NDQ5NDk4NjYsImFjY3QiOjAsImFjciI6IjEiLCJhaW8iOiJBVVFBdS84VEFBQUEzNjBXUEhnN1FUQ3RJYjRPa0JrdS84Wm1iQXZQNGRBRDY3SVlVWTk0NFlFVElzeW9pTnMvT09uMXM4R09IUjdMamx3UHgwVU1va3JRNGNiVFZXZzNQUT09IiwiYW1yIjpbInB3ZCIsInJzYSIsIm1mYSJdLCJhcHBpZCI6IjdmNTlhNzczLTJlYWYtNDI5Yy1hMDU5LTUwZmM1YmIyOGI0NCIsImFwcGlkYWNyIjoiMiIsImRldmljZWlkIjoiYWVhOTQ4ZjUtM2NlYi00NjcxLTlhNGQtYjUxMGUyMzdkMGZjIiwiZmFtaWx5X25hbWUiOiJNdWVsbGVyIiwiZ2l2ZW5fbmFtZSI6Ikt5bGUiLCJpcGFkZHIiOiIxOTkuNDkuMTguMTM5IiwibmFtZSI6Ik11ZWxsZXIsIEt5bGUgKEFsdm9yZCwgQnJhZCBELikiLCJvaWQiOiIwYzg0YzAyNC1hZWVlLTQwMzQtOTA4ZS0zYTgyYTA3ZDkzYTciLCJvbnByZW1fc2lkIjoiUy0xLTUtMjEtNjAyMTYyMzU4LTc5MDUyNTQ3OC02ODIwMDMzMzAtMjk3NzE5MiIsInB1aWQiOiIxMDAzMjAwMTVGMDIxQjY4IiwicmgiOiIwLkFRTUE0ZWRTejQta0hFS0ppZ0k3QmVzRVRBa0FBQUFBQUFBQXdBQUFBQUFBQUFBREFFOC4iLCJzY3AiOiJ1c2VyX2ltcGVyc29uYXRpb24iLCJzaWduaW5fc3RhdGUiOlsiZHZjX21uZ2QiLCJkdmNfY21wIiwiZHZjX2RtamQiLCJrbXNpIl0sInN1YiI6InZ4X1dLd0o2Q1VqbnIwWHRVMGhtdXliemVjM0RHbi0wODJ1cFZTZ3NKVFUiLCJ0aWQiOiJjZjUyZTdlMS1hNDhmLTQyMWMtODk4YS0wMjNiMDVlYjA0NGMiLCJ1bmlxdWVfbmFtZSI6IkM2OTQ4NkBmZW5ldHdvcmsuY29tIiwidXBuIjoiQzY5NDg2QGZlbmV0d29yay5jb20iLCJ1dGkiOiJZM1FlOWxrNEVVVzZ4Ql9Zd0dNbUFBIiwidmVyIjoiMS4wIiwid2lkcyI6WyJhOWVhODk5Ni0xMjJmLTRjNzQtOTUyMC04ZWRjZDE5MjgyNmMiLCJiNzlmYmY0ZC0zZWY5LTQ2ODktODE0My03NmIxOTRlODU1MDkiXX0.DydlGaxG702R6X12lmwNuCGa_uJP-u0NQPfkJJUUHn44bvV6wDSz3r4_ewhfn2CK6NzYb8CrQHn8KpIHXzWLk72rb1cxT6sslLXk-Y3Ue7oTaizmfKE6xHL9ops_fEHjB3FcNO3AOgfu9H9LEzHsyjn7sal29n3MONZrb18TO3vcrZGP51fGqzROShmvEXCX7ksSH9W7b1K61xdgq0GIuxXoyRac_YvS47OOdcSrFy43SUOj1uxH4HnVF_Quz-yW1emjt4DCRCE1I64_aPmFMRrakdtltfQEa1c4Px9U6Y6U9NFIOWFJlsuca_QU9oO5tQoLu4s-5VaklpUwUm18aQ" meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type text]
in
  BearerToken

// Query1
let
  Source = Json.Document(Web.Contents("https://api.powerbi.com/v1.0/myorg/admin/dataflows", [Headers=[Authorization="Bearer " & BearerToken]])),
  value = Source[value],
  #"Converted to Table" = Table.FromList(value, Splitter.SplitByNothing(), null, null, ExtraValues.Error),
  #"Kept top rows" = Table.FirstN(#"Converted to Table", TopRows),
  #"Expanded Column1" = Table.ExpandRecordColumn(#"Kept top rows", "Column1", {"objectId", "name", "workspaceId"}, {"objectId", "name", "workspaceId"}),
  #"Added Custom" = Table.AddColumn(#"Expanded Column1", "Custom", each Json.Document(Web.Contents("https://api.powerbi.com/v1.0/myorg/admin/dataflows/" & [objectId] & "/datasources", [Headers=[Authorization="Bearer " & BearerToken]]))),
  #"Removed Errors" = Table.RemoveRowsWithErrors(#"Added Custom", {"Custom"}),
  #"Expanded Custom" = Table.ExpandRecordColumn(#"Removed Errors", "Custom", {"value"}, {"Custom.value"}),
  #"Expanded Custom.value" = Table.ExpandListColumn(#"Expanded Custom", "Custom.value"),
  #"Expanded Custom.value1" = Table.ExpandRecordColumn(#"Expanded Custom.value", "Custom.value", {"datasourceType", "connectionDetails", "datasourceId", "gatewayId"}, {"Custom.value.datasourceType", "Custom.value.connectionDetails", "Custom.value.datasourceId", "Custom.value.gatewayId"})
in
  #"Expanded Custom.value1"

// TopRows
let
  ParameterTest = 5000 meta [IsParameterQuery = true, IsParameterQueryRequired = true, Type = type number]
in
  ParameterTest
